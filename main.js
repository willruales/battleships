(()=>{"use strict";class t{constructor(){this.twoDArray=Array.from({length:8},(()=>Array(8).fill(0)))}placeBoat(t){const{angle:r,length:o,location:e}=t,[a,n]=e;if("H"===r){for(let t=0;t<o;t++)if(n+t>=8||1===this.twoDArray[a][n+t])return!1;for(let t=0;t<o;t++)this.twoDArray[a][n+t]=1}else if("V"===r){for(let t=0;t<o;t++)if(a+t>=8||1===this.twoDArray[a+t][n])return!1;for(let t=0;t<o;t++)this.twoDArray[a+t][n]=1}return!0}recieveAttack(t){return 1===this.twoDArray[t[0]][t[1]]?(this.twoDArray[t[0]][t[1]]="X","hit!"):0===this.twoDArray[t[0]][t[1]]?"miss!":void 0}run(){return 1}findEngGame(){return this.twoDArray.flat().filter((t=>"X"===t)).length>=6}}let r={};class o{constructor(t,r,o){this.length=r,this.name=this.createShipName(r),this.hp=r,this.sink=!1,this.location=o,this.angle=t}shipHit(){this.hp--,this.hp<=0&&this.shipSunk()}shipSunk(){this.sink=!0}createShipName(t){if(2===t)return"Destroer";if(3===t)return"Submarine";if(3===t)return"cruister";{const o=r[t]||0;return r[t]=o+1,`Ship${o}`}}}const e=new t,a=new t;console.log(3),document.body.innerText="runn",console.log("run");const n=new o("H",1,[[1,2]]),s=new class{constructor(t){this.playerGameBoard=t,this.ships=[],this.placeRandomShips()}placeRandomShips(){const t=[2,2,3,3,4];for(const r of t){let t=!1;for(;!t;){const t=this.generateRandomLocation(r),e=Math.random()<.5?"H":"V",a=new o(e,r,t);this.playerGameBoard.placeBoat(a)}}}generateRandomLocation(t){return[Math.floor(8*Math.random()),Math.floor(Math.random()*(8-t+1))]}isShipOverlap(t){const{angle:r,length:o,location:e}=t,[a,n]=e;for(let t=0;t<o;t++)if("H"===r&&1===this.playerGameBoard.twoDArray[a][n+t]||"V"===r&&1===this.playerGameBoard.twoDArray[a+t][n])return!0;return!1}}(e),i=new class{constructor(t,r){this.playBoard=t,this.attackBoard=r,this.turn=null,this.boats=[]}}(e,a);console.log(n,s,i)})();